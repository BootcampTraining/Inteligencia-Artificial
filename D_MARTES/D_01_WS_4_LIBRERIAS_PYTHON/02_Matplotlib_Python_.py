# -*- coding: utf-8 -*-
"""Introducción a Python .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1puahiVBmVDiA8uoLfC14zfO8t4ruoXdK

# Programación con Python - Matplotlib


Matplotlib es una librería de Python especializada en la creación de gráficos en dos dimensiones.
Permite crear y personalizar los tipos de gráficos más comunes, entre ellos:

Diagramas de barras
Histograma
Diagramas de sectores
Diagramas de caja y bigotes
Diagramas de violín
Diagramas de dispersión o puntos
Diagramas de lineas
Diagramas de areas
Diagramas de contorno
Mapas de color
y combinaciones de todos ellos.

### Actividad 1

Escribir un programa que dibuje una grafica a partir de unos datos fijos (X,Y)
"""

import matplotlib.pyplot as plt 
x=[1,2,3,4,5]
y=[1,8,27,64,125]

plt.plot(x,y)
plt.show()

"""### Actividad 2
Escribir una función que reciba una diccionario con las notas de las asignaturas de un curso y una cadena con el nombre de un color y devuelva un diagrama de barras de las notas en el color dado.
"""

import matplotlib.pyplot as plt 

def diagrama_barras_notas(notas, color):
    '''Función que construye un diagrama de barras con las notas de las asignaturas de un curso.
    
    Parámetros:
        - notas: Es un diccionario formado por pares con clave el nombre de la asignaturay valor la nota.
        - color: Es una cadena con el color de las barras.
    
    Salida:
        - Un diagrama de barras con las notas del diccionario dado en el color dado.
    '''
    # Definimos la figura y los ejes del gráfico con Matplotlib
    fig, ax = plt.subplots()
    # Dibujamos las barras con las notas a partir del diccionario
    ax.bar(notas.keys(), notas.values(), color = color)
    # Devolvemos un objeto con los ejes y las barras que contienen
    return ax

notas = {'Programación':9, 'Mates':6.5, 'Economía':4, 'Historia': 8}
diagrama_barras_notas(notas, 'orange')
plt.show()

"""### Actividad 3

Escribir una función que reciba una serie de Pandas con el número de ventas de un producto durante los meses de un trimestre y un título y cree un diagrama de sectores con las ventas en formato png con el titulo dado. El diagrama debe guardarse en un fichero con formato png y el título dado.

"""

import pandas as pd 
import matplotlib.pyplot as plt 

def diagrama_sectores_ventas(ventas, titulo):
    '''Función que construye un diagrama de sectores con las ventas de un trimestre y lo guarda con un nombre dado. 
    
    Parámetros:
        - ventas: Es una serie de Pandas con las ventas del trimestre, siendo el índice los meses.
        - titulo: Es una cadena con el título.
    '''
    # Definimos la figura y los ejes del gráfico con Matplotlib
    fig, ax = plt.subplots()
    # Dibujamos los sectores con las verntas a partir de la serie
    ventas.plot(kind = 'pie', ax = ax)
    # Eliminamos el título del eje y
    plt.ylabel('')
    # Añadimos el título
    plt.title(titulo)
    # Guardamos el gráfico con el nombre dado en formato png
    plt.savefig(titulo + '.png')
    return 

ventas = {'Enero':200, 'Febrero':240, 'Marzo':310}
s_ventas = pd.Series(ventas)
diagrama_sectores_ventas(s_ventas, 'Ventas primer trimestre')

"""### Actividad 4 

Escribir una función que reciba una serie de Pandas con el número de ventas de un producto por años y una cadena con el tipo de gráfico a generar (lineas, barras, sectores, areas) y devuelva un diagrama del tipo indicado con la evolución de las ventas por años y con el título "Evolución del número de ventas".
"""

import pandas as pd 
import matplotlib.pyplot as plt 

def diagrama_evolucion_ventas(ventas, tipo):
    '''Función que construye un diagrama del tipo indicado con la evolución de las ventas por años.
    
    Parámetros:
        - ventas: Es un dataframe de Pandas con las ventas, siendo el índice los años.
        - tipo: Es una cadena con el tipo de gráfico a dibujar: lineas, barras, sectores o areas.

    Salida:
        Un gráfico del tipo indicado con la evolución de las ventas.
    '''
    # Definimos un diccionario con los tipos de gráficos
    graficos = {'lineas':'line', 'barras':'bar', 'sectores':'pie', 'area':'area'}
    # Definimos la figura y los ejes del gráfico con Matplotlib
    fig, ax = plt.subplots()
    # Dibujamos las series de líneas con los ingresos y los gastos
    ventas.plot(kind = graficos[tipo], ax = ax)
    # Añadimos el título
    plt.title('Evolución del número de ventas')
    # Devolvemos el objeto con los ejes y el gráfico que contienten
    return ax

df_ventas = pd.Series([1200, 840, 1325, 1280, 1500], index = [2000, 2001, 2002, 2003, 2004])
diagrama_evolucion_ventas(df_ventas, 'lineas')
plt.show()
diagrama_evolucion_ventas(df_ventas, 'area')
plt.show()
diagrama_evolucion_ventas(df_ventas, 'barras')
plt.show()
diagrama_evolucion_ventas(df_ventas, 'sectores')
plt.show()

"""###Actividad 5

Escribir una función que reciba un dataframe de Pandas con los ingresos y gastos de una empresa por meses y devuelva un diagrama de líneas con dos líneas, una para los ingresos y otra para los gastos. El diagrama debe tener una leyenda identificando la línea de los ingresos y la de los gastos, un título con el nombre "Evolución de ingresos y gastos" y el eje y debe empezar en 0.
"""

import pandas as pd 
import matplotlib.pyplot as plt 

def diagrama_lineas_ingresos_gastos(datos):
    '''Función que construye un diagrama de lineas con los ingresos y gastos de un cuatrimestre.
    
    Parámetros:
        - datos: Es un dataframe de Pandas con dos columnas, una para los ingresos y otra para los gastos, y como índice los meses.

    Salida:
        Un gráfico de líneas con los ingresos y los gastos dados.
    '''
    # Definimos la figura y los ejes del gráfico con Matplotlib
    fig, ax = plt.subplots()
    # Dibujamos las series de líneas con los ingresos y los gastos
    datos.plot(ax = ax)
    # Añadimos la escala del eje y
    ax.set_ylim([0, max(datos.Ingresos.max(), datos.Gastos.max()) + 500])
    # Añadimos el título
    plt.title('Evolución de ingresos y gastos')
    # Devolvemos el objeto con los ejes y el gráfico que contienten
    return ax

datos = {'Mes':['Ene', 'Feb', 'Mar', 'Abr'], 'Ingresos':[4500, 5200, 4800, 5300], 'Gastos':[2300, 2450, 2000, 2200]}
df_datos = pd.DataFrame(datos).set_index('Mes')
diagrama_lineas_ingresos_gastos(df_datos)
plt.show()